# DFS
## DFS(Depth-First Search)란?
그래프 탐색 방법 중 하나로,
루트 노드에서 시작하여 **다음 분기로 넘어가기 전 해당 분기를 완전히 탐색**하는 방법이다.

## DFS의 특징
1. 자기 자신을 호출하는 **순환 알고리즘의 형태** 를 가진다.
2. **모든 노드를 방문**하고자 하는 경우에 이 방법을 선택한다.
3. 검색 대상이 클 때는 BFS보다는 DFS가 낫다.
4. 현 경로 상의 노드만 기억하기 때문에 메모리 소모가 적다.
5. 이동했던 노드의 방문여부를 체크해야한다.

## DFS의 시간복잡도
* DFS는 그래프(정점의 수:N, 간선의 수:E)의 모든 간선을 조회한다.
    * 인접 리스트로 표현된 그래프 : O(N+E)
    * 인접 행렬로 표현된 그래프 : O(N^2)

# BFS
## BFS(Breadth-First Search)란?
그래프 탐색 방법 중 하나로,
루트 노드에서 시작해서 **인접한 노드를 먼저 탐색**하는 방법이다.

## BFS의 특징
1. 방문한 노드를 차례롤 꺼낼 수 있는 선입선출 형태의 큐(Queue)를 사용한다.
2. **두 노드 사이의 최단 경로** 혹은 **임의의 경로를 찾고 싶을 때** 이 방법을 선택한다.
3. 검색 대상이 크지 않거나 검색시작지점으로부터 대상이 멀지 않다면 BFS가 낫다.
4. 루트 노드에서 가까운 노드를 먼저 찾기 때문에 항상 최적 해를 보장한다.
5. 이동했던 노드의 방문여부를 체크해야한다.

## BFS의 시간복잡도
  * 인접 리스트로 표현된 그래프 : O(N+E)
  * 인접 행렬로 표현된 그래프 : O(N^2)